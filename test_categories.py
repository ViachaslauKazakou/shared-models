#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π."""

from shared_models.database import SessionLocal
from shared_models.models import User, Topic, Category, Subcategory
from shared_models.schemas import UserRole, Status

def test_categories_and_subcategories():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–ø–∏–∫–æ–≤ —Å –Ω–∏–º–∏."""
    db = SessionLocal()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User(
            username="test_categories_user",
            firstname="Test",
            lastname="User",
            password="hashed_password",
            email="test_categories@example.com",
            user_type=UserRole.user,
            status=Status.active
        )
        db.add(test_user)
        db.commit()
        db.refresh(test_user)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.username} (ID: {test_user.id})")
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        tech_category = Category(
            name="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            description="–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
            slug="tech",
            color="#007BFF",
            icon="laptop",
            sort_order=1
        )
        db.add(tech_category)
        db.commit()
        db.refresh(tech_category)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {tech_category.name} (ID: {tech_category.id})")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
        python_subcategory = Subcategory(
            name="Python",
            description="–í–æ–ø—Ä–æ—Å—ã –ø–æ —è–∑—ã–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python",
            slug="python",
            color="#3776AB",
            icon="python",
            category_id=tech_category.id,
            sort_order=1
        )
        db.add(python_subcategory)
        db.commit()
        db.refresh(python_subcategory)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {python_subcategory.name} (ID: {python_subcategory.id})")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–ø–∏–∫ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        test_topic = Topic(
            title="–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQLAlchemy —Å pgvector?",
            description="–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SQLAlchemy —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º pgvector",
            user_id=test_user.id,
            category_id=tech_category.id,
            subcategory_id=python_subcategory.id
        )
        db.add(test_topic)
        db.commit()
        db.refresh(test_topic)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–ø–∏–∫: {test_topic.title} (ID: {test_topic.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π:")
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è -> –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_with_subcategories = db.query(Category).filter(Category.id == tech_category.id).first()
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_with_subcategories.name}' –∏–º–µ–µ—Ç {len(category_with_subcategories.subcategories)} –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        for sub in category_with_subcategories.subcategories:
            print(f"     - {sub.name}")
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è -> –¢–æ–ø–∏–∫–∏
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_with_subcategories.name}' –∏–º–µ–µ—Ç {len(category_with_subcategories.topics)} —Ç–æ–ø–∏–∫–æ–≤")
        for topic in category_with_subcategories.topics:
            print(f"     - {topic.title}")
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è -> –¢–æ–ø–∏–∫–∏
        subcategory_with_topics = db.query(Subcategory).filter(Subcategory.id == python_subcategory.id).first()
        print(f"   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è '{subcategory_with_topics.name}' –∏–º–µ–µ—Ç {len(subcategory_with_topics.topics)} —Ç–æ–ø–∏–∫–æ–≤")
        for topic in subcategory_with_topics.topics:
            print(f"     - {topic.title}")
        
        # –¢–æ–ø–∏–∫ -> –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è
        topic_with_relations = db.query(Topic).filter(Topic.id == test_topic.id).first()
        print(f"   –¢–æ–ø–∏–∫ '{topic_with_relations.title}':")
        print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {topic_with_relations.category.name if topic_with_relations.category else '–ù–µ—Ç'}")
        print(f"     –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {topic_with_relations.subcategory.name if topic_with_relations.subcategory else '–ù–µ—Ç'}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def test_topic_without_categories():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è)."""
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.username == "test_categories_user").first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–ø–∏–∫ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        simple_topic = Topic(
            title="–û–±—â–µ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ",
            description="–¢–æ–ø–∏–∫ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
            user_id=user.id
            # category_id –∏ subcategory_id –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º (–æ–Ω–∏ Optional)
        )
        db.add(simple_topic)
        db.commit()
        db.refresh(simple_topic)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–ø–∏–∫ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {simple_topic.title}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {simple_topic.category}")
        print(f"   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {simple_topic.subcategory}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–ø–∏–∫–∞ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    if test_categories_and_subcategories():
        print("\n" + "=" * 50)
        
        # –¢–µ—Å—Ç 2: –¢–æ–ø–∏–∫ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        test_topic_without_categories()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
