"""Initial migration: create all tables with proper relationships

Revision ID: 3d4ef75fee1e
Revises:
Create Date: 2025-07-30 20:35:07.202629

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = "3d4ef75fee1e"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "embeddings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("embedding", pgvector.sqlalchemy.Vector(dim=1536), nullable=False),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_embeddings_id"), "embeddings", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("firstname", sa.String(length=100), nullable=True),
        sa.Column("lastname", sa.String(length=100), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column(
            "user_type",
            sa.Enum("admin", "user", "ai_bot", "mixed", "mentor", "mentee", name="user_type", native_enum=False),
            nullable=True,
        ),
        sa.Column(
            "status",
            sa.Enum("pending", "active", "disabled", "blocked", "deleted", name="user_status", native_enum=False),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "topics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_topics_id"), "topics", ["id"], unique=False)
    op.create_index(op.f("ix_topics_title"), "topics", ["title"], unique=False)
    op.create_table(
        "user_knowledge",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.String(length=50), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("personality", sa.Text(), nullable=True),
        sa.Column("background", sa.Text(), nullable=True),
        sa.Column("expertise", sa.JSON(), nullable=True),
        sa.Column("communication_style", sa.Text(), nullable=True),
        sa.Column("preferences", sa.JSON(), nullable=True),
        sa.Column("file_path", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_knowledge_character_id"), "user_knowledge", ["character_id"], unique=True)
    op.create_index(op.f("ix_user_knowledge_user_id"), "user_knowledge", ["user_id"], unique=True)
    op.create_table(
        "user_message_examples",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.String(length=50), nullable=True),
        sa.Column("context", sa.Text(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("thread_id", sa.String(length=100), nullable=True),
        sa.Column("reply_to", sa.String(length=100), nullable=True),
        sa.Column("content_embedding", pgvector.sqlalchemy.Vector(dim=1536), nullable=True),
        sa.Column("context_embedding", pgvector.sqlalchemy.Vector(dim=1536), nullable=True),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column("source_file", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_message_examples_character_id"), "user_message_examples", ["character_id"], unique=False
    )
    op.create_index(op.f("ix_user_message_examples_id"), "user_message_examples", ["id"], unique=False)
    op.create_index(op.f("ix_user_message_examples_reply_to"), "user_message_examples", ["reply_to"], unique=False)
    op.create_index(op.f("ix_user_message_examples_user_id"), "user_message_examples", ["user_id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("author_name", sa.String(length=100), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("topic_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["messages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_messages_id"), "messages", ["id"], unique=False)
    op.create_table(
        "message_embeddings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=True),
        sa.Column("topic_id", sa.Integer(), nullable=True),
        sa.Column("user_message_example_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("embedding", pgvector.sqlalchemy.Vector(dim=1536), nullable=False),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["message_id"], ["messages.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["topic_id"], ["topics.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_message_example_id"], ["user_message_examples.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_message_embeddings_id"), "message_embeddings", ["id"], unique=False)
    op.create_index(op.f("ix_message_embeddings_message_id"), "message_embeddings", ["message_id"], unique=False)
    op.create_index(op.f("ix_message_embeddings_topic_id"), "message_embeddings", ["topic_id"], unique=False)
    op.create_index(
        op.f("ix_message_embeddings_user_message_example_id"),
        "message_embeddings",
        ["user_message_example_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_message_embeddings_user_message_example_id"), table_name="message_embeddings")
    op.drop_index(op.f("ix_message_embeddings_topic_id"), table_name="message_embeddings")
    op.drop_index(op.f("ix_message_embeddings_message_id"), table_name="message_embeddings")
    op.drop_index(op.f("ix_message_embeddings_id"), table_name="message_embeddings")
    op.drop_table("message_embeddings")
    op.drop_index(op.f("ix_messages_id"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(op.f("ix_user_message_examples_user_id"), table_name="user_message_examples")
    op.drop_index(op.f("ix_user_message_examples_reply_to"), table_name="user_message_examples")
    op.drop_index(op.f("ix_user_message_examples_id"), table_name="user_message_examples")
    op.drop_index(op.f("ix_user_message_examples_character_id"), table_name="user_message_examples")
    op.drop_table("user_message_examples")
    op.drop_index(op.f("ix_user_knowledge_user_id"), table_name="user_knowledge")
    op.drop_index(op.f("ix_user_knowledge_character_id"), table_name="user_knowledge")
    op.drop_table("user_knowledge")
    op.drop_index(op.f("ix_topics_title"), table_name="topics")
    op.drop_index(op.f("ix_topics_id"), table_name="topics")
    op.drop_table("topics")
    op.drop_table("users")
    op.drop_index(op.f("ix_embeddings_id"), table_name="embeddings")
    op.drop_table("embeddings")
    # ### end Alembic commands ###
