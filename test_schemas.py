#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Pydantic —Å—Ö–µ–º –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ shared_models –≤ sys.path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "."))

from shared_models import (
    CategoryCreate,
    CategoryResponse,
    SubcategoryCreate,
    SubcategoryResponse,
    TopicCreate,
    TopicWithCategories,
)


def test_schemas():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Pydantic —Å—Ö–µ–º")
    print("=" * 50)

    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category_data = {
        "name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "description": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
        "slug": "tech",
        "color": "#007BFF",
        "icon": "laptop",
    }

    category_create = CategoryCreate(**category_data)
    print(f"‚úÖ CategoryCreate: {category_create.name}")

    # –¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category_response_data = {
        **category_data,
        "id": 1,
        "created_at": datetime.now(),
        "updated_at": datetime.now(),
        "is_active": True,
        "sort_order": 1,
    }

    category_response = CategoryResponse(**category_response_data)
    print(f"‚úÖ CategoryResponse: {category_response.name} (ID: {category_response.id})")

    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    subcategory_data = {
        "name": "Python",
        "description": "–í–æ–ø—Ä–æ—Å—ã –ø–æ Python",
        "slug": "python",
        "color": "#3776AB",
        "icon": "python",
        "category_id": 1,
    }

    subcategory_create = SubcategoryCreate(**subcategory_data)
    print(f"‚úÖ SubcategoryCreate: {subcategory_create.name}")

    # –¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    subcategory_response_data = {
        **subcategory_data,
        "id": 1,
        "created_at": datetime.now(),
        "updated_at": datetime.now(),
        "is_active": True,
        "sort_order": 1,
    }

    subcategory_response = SubcategoryResponse(**subcategory_response_data)
    print(f"‚úÖ SubcategoryResponse: {subcategory_response.name} (ID: {subcategory_response.id})")

    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    topic_data = {
        "title": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQLAlchemy?",
        "description": "–í–æ–ø—Ä–æ—Å –ø–æ ORM",
        "user_id": 1,
        "category_id": 1,
        "subcategory_id": 1,
    }

    topic_create = TopicCreate(**topic_data)
    print(f"‚úÖ TopicCreate: {topic_create.title}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: {topic_create.category_id}")
    print(f"   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è ID: {topic_create.subcategory_id}")

    # –¢–µ—Å—Ç TopicWithCategories
    topic_with_categories_data = {
        **topic_data,
        "id": 1,
        "created_at": datetime.now(),
        "updated_at": datetime.now(),
        "is_active": True,
        "category": category_response,
        "subcategory": subcategory_response,
    }

    topic_with_categories = TopicWithCategories(**topic_with_categories_data)
    print(f"‚úÖ TopicWithCategories: {topic_with_categories.title}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {topic_with_categories.category.name if topic_with_categories.category else 'None'}")
    print(f"   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {topic_with_categories.subcategory.name if topic_with_categories.subcategory else 'None'}")

    # –¢–µ—Å—Ç TopicCreate –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    topic_no_categories = TopicCreate(title="–û–±—â–µ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ", description="–¢–æ–ø–∏–∫ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    print(f"‚úÖ TopicCreate –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {topic_no_categories.title}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: {topic_no_categories.category_id}")
    print(f"   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è ID: {topic_no_categories.subcategory_id}")

    print("\nüéâ –í—Å–µ —Å—Ö–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")


if __name__ == "__main__":
    test_schemas()
